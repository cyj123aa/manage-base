<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoolink.manage.base.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.hoolink.manage.base.dao.model.User">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="BIT" property="sex" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="img_id" jdbcType="BIGINT" property="imgId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="encry_level_company" jdbcType="INTEGER" property="encryLevelCompany" />
    <result column="first_login" jdbcType="BIT" property="firstLogin" />
    <result column="last_time" jdbcType="BIGINT" property="lastTime" />
    <result column="user_status" jdbcType="BIT" property="status" />
    <result column="view_encry_level_permitted" jdbcType="BIT" property="viewEncryLevelPermitted" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="updator" jdbcType="BIGINT" property="updator" />
    <result column="created" jdbcType="BIGINT" property="created" />
    <result column="updated" jdbcType="BIGINT" property="updated" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, user_no, user_account, user_name, sex, role_id, passwd, img_id, phone, position, 
    encry_level_company, first_login, last_time, user_status, view_encry_level_permitted, 
    creator, updator, created, updated, enabled
  </sql>
  <select id="selectByExample" parameterType="com.hoolink.manage.base.dao.model.UserExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from manage_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from manage_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from manage_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hoolink.manage.base.dao.model.UserExample">
    <!--
    @mbggenerated
    -->
    delete from manage_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.hoolink.manage.base.dao.model.User" useGeneratedKeys="true">
    <!--
    @mbggenerated
    -->
    insert into manage_user (user_no, user_account, user_name, 
      sex, role_id, passwd, img_id, 
      phone, position, encry_level_company, 
      first_login, last_time, user_status, 
      view_encry_level_permitted, creator, updator, 
      created, updated, enabled
      )
    values (#{userNo,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=BIT}, #{roleId,jdbcType=BIGINT}, #{passwd,jdbcType=VARCHAR}, #{imgId,jdbcType=BIGINT}, 
      #{phone,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{encryLevelCompany,jdbcType=INTEGER}, 
      #{firstLogin,jdbcType=BIT}, #{lastTime,jdbcType=BIGINT}, #{status,jdbcType=BIT}, 
      #{viewEncryLevelPermitted,jdbcType=BIT}, #{creator,jdbcType=BIGINT}, #{updator,jdbcType=BIGINT}, 
      #{created,jdbcType=BIGINT}, #{updated,jdbcType=BIGINT}, #{enabled,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.hoolink.manage.base.dao.model.User" useGeneratedKeys="true">
    <!--
    @mbggenerated
    -->
    insert into manage_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userNo != null">
        user_no,
      </if>
      <if test="userAccount != null">
        user_account,
      </if>
      <if test="name != null">
        user_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="imgId != null">
        img_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="encryLevelCompany != null">
        encry_level_company,
      </if>
      <if test="firstLogin != null">
        first_login,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="status != null">
        user_status,
      </if>
      <if test="viewEncryLevelPermitted != null">
        view_encry_level_permitted,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updator != null">
        updator,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=BIT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="imgId != null">
        #{imgId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="encryLevelCompany != null">
        #{encryLevelCompany,jdbcType=INTEGER},
      </if>
      <if test="firstLogin != null">
        #{firstLogin,jdbcType=BIT},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="viewEncryLevelPermitted != null">
        #{viewEncryLevelPermitted,jdbcType=BIT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="updator != null">
        #{updator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=BIGINT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hoolink.manage.base.dao.model.UserExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from manage_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update manage_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userNo != null">
        user_no = #{record.userNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userAccount != null">
        user_account = #{record.userAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        user_name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.passwd != null">
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.imgId != null">
        img_id = #{record.imgId,jdbcType=BIGINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.encryLevelCompany != null">
        encry_level_company = #{record.encryLevelCompany,jdbcType=INTEGER},
      </if>
      <if test="record.firstLogin != null">
        first_login = #{record.firstLogin,jdbcType=BIT},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        user_status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.viewEncryLevelPermitted != null">
        view_encry_level_permitted = #{record.viewEncryLevelPermitted,jdbcType=BIT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.updator != null">
        updator = #{record.updator,jdbcType=BIGINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=BIGINT},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=BIGINT},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update manage_user
    set id = #{record.id,jdbcType=BIGINT},
      user_no = #{record.userNo,jdbcType=VARCHAR},
      user_account = #{record.userAccount,jdbcType=VARCHAR},
      user_name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=BIT},
      role_id = #{record.roleId,jdbcType=BIGINT},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      img_id = #{record.imgId,jdbcType=BIGINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      encry_level_company = #{record.encryLevelCompany,jdbcType=INTEGER},
      first_login = #{record.firstLogin,jdbcType=BIT},
      last_time = #{record.lastTime,jdbcType=BIGINT},
      user_status = #{record.status,jdbcType=BIT},
      view_encry_level_permitted = #{record.viewEncryLevelPermitted,jdbcType=BIT},
      creator = #{record.creator,jdbcType=BIGINT},
      updator = #{record.updator,jdbcType=BIGINT},
      created = #{record.created,jdbcType=BIGINT},
      updated = #{record.updated,jdbcType=BIGINT},
      enabled = #{record.enabled,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hoolink.manage.base.dao.model.User">
    <!--
    @mbggenerated
    -->
    update manage_user
    <set>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userAccount != null">
        user_account = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        user_name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="imgId != null">
        img_id = #{imgId,jdbcType=BIGINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="encryLevelCompany != null">
        encry_level_company = #{encryLevelCompany,jdbcType=INTEGER},
      </if>
      <if test="firstLogin != null">
        first_login = #{firstLogin,jdbcType=BIT},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        user_status = #{status,jdbcType=BIT},
      </if>
      <if test="viewEncryLevelPermitted != null">
        view_encry_level_permitted = #{viewEncryLevelPermitted,jdbcType=BIT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="updator != null">
        updator = #{updator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=BIGINT},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hoolink.manage.base.dao.model.User">
    <!--
    @mbggenerated
    -->
    update manage_user
    set user_no = #{userNo,jdbcType=VARCHAR},
      user_account = #{userAccount,jdbcType=VARCHAR},
      user_name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=BIT},
      role_id = #{roleId,jdbcType=BIGINT},
      passwd = #{passwd,jdbcType=VARCHAR},
      img_id = #{imgId,jdbcType=BIGINT},
      phone = #{phone,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      encry_level_company = #{encryLevelCompany,jdbcType=INTEGER},
      first_login = #{firstLogin,jdbcType=BIT},
      last_time = #{lastTime,jdbcType=BIGINT},
      user_status = #{status,jdbcType=BIT},
      view_encry_level_permitted = #{viewEncryLevelPermitted,jdbcType=BIT},
      creator = #{creator,jdbcType=BIGINT},
      updator = #{updator,jdbcType=BIGINT},
      created = #{created,jdbcType=BIGINT},
      updated = #{updated,jdbcType=BIGINT},
      enabled = #{enabled,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>