<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoolink.manage.base.dao.mapper.ManageRoleMapper">
  <resultMap id="BaseResultMap" type="com.hoolink.manage.base.dao.model.ManageRole">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="role_level" jdbcType="TINYINT" property="roleLevel" />
    <result column="role_status" jdbcType="BIT" property="roleStatus" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="updator" jdbcType="BIGINT" property="updator" />
    <result column="created" jdbcType="BIGINT" property="created" />
    <result column="updated" jdbcType="BIGINT" property="updated" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="role_type" jdbcType="BIT" property="roleType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, role_name, role_desc, parent_id, role_level, role_status, creator, updator, created, 
    updated, enabled, role_type
  </sql>
  <select id="selectByExample" parameterType="com.hoolink.manage.base.dao.model.ManageRoleExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from manage_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from manage_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from manage_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hoolink.manage.base.dao.model.ManageRoleExample">
    <!--
    @mbggenerated
    -->
    delete from manage_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.hoolink.manage.base.dao.model.ManageRole" useGeneratedKeys="true">
    <!--
    @mbggenerated
    -->
    insert into manage_role (role_name, role_desc, parent_id, 
      role_level, role_status, creator, 
      updator, created, updated, 
      enabled, role_type)
    values (#{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{roleLevel,jdbcType=TINYINT}, #{roleStatus,jdbcType=BIT}, #{creator,jdbcType=BIGINT}, 
      #{updator,jdbcType=BIGINT}, #{created,jdbcType=BIGINT}, #{updated,jdbcType=BIGINT}, 
      #{enabled,jdbcType=BIT}, #{roleType,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.hoolink.manage.base.dao.model.ManageRole" useGeneratedKeys="true">
    <!--
    @mbggenerated
    -->
    insert into manage_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="roleLevel != null">
        role_level,
      </if>
      <if test="roleStatus != null">
        role_status,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updator != null">
        updator,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="roleLevel != null">
        #{roleLevel,jdbcType=TINYINT},
      </if>
      <if test="roleStatus != null">
        #{roleStatus,jdbcType=BIT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=BIGINT},
      </if>
      <if test="updator != null">
        #{updator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=BIGINT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hoolink.manage.base.dao.model.ManageRoleExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from manage_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update manage_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDesc != null">
        role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.roleLevel != null">
        role_level = #{record.roleLevel,jdbcType=TINYINT},
      </if>
      <if test="record.roleStatus != null">
        role_status = #{record.roleStatus,jdbcType=BIT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=BIGINT},
      </if>
      <if test="record.updator != null">
        updator = #{record.updator,jdbcType=BIGINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=BIGINT},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=BIGINT},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.roleType != null">
        role_type = #{record.roleType,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update manage_role
    set id = #{record.id,jdbcType=BIGINT},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      role_level = #{record.roleLevel,jdbcType=TINYINT},
      role_status = #{record.roleStatus,jdbcType=BIT},
      creator = #{record.creator,jdbcType=BIGINT},
      updator = #{record.updator,jdbcType=BIGINT},
      created = #{record.created,jdbcType=BIGINT},
      updated = #{record.updated,jdbcType=BIGINT},
      enabled = #{record.enabled,jdbcType=BIT},
      role_type = #{record.roleType,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hoolink.manage.base.dao.model.ManageRole">
    <!--
    @mbggenerated
    -->
    update manage_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="roleLevel != null">
        role_level = #{roleLevel,jdbcType=TINYINT},
      </if>
      <if test="roleStatus != null">
        role_status = #{roleStatus,jdbcType=BIT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=BIGINT},
      </if>
      <if test="updator != null">
        updator = #{updator,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=BIGINT},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=BIGINT},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hoolink.manage.base.dao.model.ManageRole">
    <!--
    @mbggenerated
    -->
    update manage_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      role_level = #{roleLevel,jdbcType=TINYINT},
      role_status = #{roleStatus,jdbcType=BIT},
      creator = #{creator,jdbcType=BIGINT},
      updator = #{updator,jdbcType=BIGINT},
      created = #{created,jdbcType=BIGINT},
      updated = #{updated,jdbcType=BIGINT},
      enabled = #{enabled,jdbcType=BIT},
      role_type = #{roleType,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>