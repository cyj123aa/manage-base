package com.hoolink.manage.base.dao.model;

import java.util.ArrayList;
import java.util.List;

public class MiddleUserDepartmentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table middle_user_department
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table middle_user_department
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table middle_user_department
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     *
     */
    public MiddleUserDepartmentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *
     * @param orderByClause
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *
     * @param distinct
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     *
     * @param criteria
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     *
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * 类注释
     * GeneratedCriteria
     * 数据库表：middle_user_department
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNull() {
            addCriterion("dept_id is null");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNotNull() {
            addCriterion("dept_id is not null");
            return (Criteria) this;
        }

        public Criteria andDeptIdEqualTo(Long value) {
            addCriterion("dept_id =", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotEqualTo(Long value) {
            addCriterion("dept_id <>", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThan(Long value) {
            addCriterion("dept_id >", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanOrEqualTo(Long value) {
            addCriterion("dept_id >=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThan(Long value) {
            addCriterion("dept_id <", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanOrEqualTo(Long value) {
            addCriterion("dept_id <=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIn(List<Long> values) {
            addCriterion("dept_id in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotIn(List<Long> values) {
            addCriterion("dept_id not in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdBetween(Long value1, Long value2) {
            addCriterion("dept_id between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotBetween(Long value1, Long value2) {
            addCriterion("dept_id not between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptIsNull() {
            addCriterion("encry_level_dept is null");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptIsNotNull() {
            addCriterion("encry_level_dept is not null");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptEqualTo(Integer value) {
            addCriterion("encry_level_dept =", value, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptNotEqualTo(Integer value) {
            addCriterion("encry_level_dept <>", value, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptGreaterThan(Integer value) {
            addCriterion("encry_level_dept >", value, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptGreaterThanOrEqualTo(Integer value) {
            addCriterion("encry_level_dept >=", value, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptLessThan(Integer value) {
            addCriterion("encry_level_dept <", value, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptLessThanOrEqualTo(Integer value) {
            addCriterion("encry_level_dept <=", value, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptIn(List<Integer> values) {
            addCriterion("encry_level_dept in", values, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptNotIn(List<Integer> values) {
            addCriterion("encry_level_dept not in", values, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptBetween(Integer value1, Integer value2) {
            addCriterion("encry_level_dept between", value1, value2, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andEncryLevelDeptNotBetween(Integer value1, Integer value2) {
            addCriterion("encry_level_dept not between", value1, value2, "encryLevelDept");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupIsNull() {
            addCriterion("diff_dept_group is null");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupIsNotNull() {
            addCriterion("diff_dept_group is not null");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupEqualTo(String value) {
            addCriterion("diff_dept_group =", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupNotEqualTo(String value) {
            addCriterion("diff_dept_group <>", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupGreaterThan(String value) {
            addCriterion("diff_dept_group >", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupGreaterThanOrEqualTo(String value) {
            addCriterion("diff_dept_group >=", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupLessThan(String value) {
            addCriterion("diff_dept_group <", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupLessThanOrEqualTo(String value) {
            addCriterion("diff_dept_group <=", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupLike(String value) {
            addCriterion("diff_dept_group like", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupNotLike(String value) {
            addCriterion("diff_dept_group not like", value, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupIn(List<String> values) {
            addCriterion("diff_dept_group in", values, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupNotIn(List<String> values) {
            addCriterion("diff_dept_group not in", values, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupBetween(String value1, String value2) {
            addCriterion("diff_dept_group between", value1, value2, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andDiffDeptGroupNotBetween(String value1, String value2) {
            addCriterion("diff_dept_group not between", value1, value2, "diffDeptGroup");
            return (Criteria) this;
        }

        public Criteria andLowestLevelIsNull() {
            addCriterion("lowest_level is null");
            return (Criteria) this;
        }

        public Criteria andLowestLevelIsNotNull() {
            addCriterion("lowest_level is not null");
            return (Criteria) this;
        }

        public Criteria andLowestLevelEqualTo(Boolean value) {
            addCriterion("lowest_level =", value, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelNotEqualTo(Boolean value) {
            addCriterion("lowest_level <>", value, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelGreaterThan(Boolean value) {
            addCriterion("lowest_level >", value, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelGreaterThanOrEqualTo(Boolean value) {
            addCriterion("lowest_level >=", value, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelLessThan(Boolean value) {
            addCriterion("lowest_level <", value, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelLessThanOrEqualTo(Boolean value) {
            addCriterion("lowest_level <=", value, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelIn(List<Boolean> values) {
            addCriterion("lowest_level in", values, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelNotIn(List<Boolean> values) {
            addCriterion("lowest_level not in", values, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelBetween(Boolean value1, Boolean value2) {
            addCriterion("lowest_level between", value1, value2, "lowestLevel");
            return (Criteria) this;
        }

        public Criteria andLowestLevelNotBetween(Boolean value1, Boolean value2) {
            addCriterion("lowest_level not between", value1, value2, "lowestLevel");
            return (Criteria) this;
        }
    }

    /**
     * 类注释
     * Criteria
     * 数据库表：middle_user_department
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * 类注释
     * Criterion
     * 数据库表：middle_user_department
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}