<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoolink.manage.base.dao.mapper.ext.UserMapperExt">

    <resultMap id="DeptUserResult" type="com.hoolink.sdk.bo.manager.DeptSecurityRepertoryBO">
        <id column="deptId"  property="deptId" />
        <result column="encryLevelDept"  property="encryLevelDept"/>
        <result column="deptType"  property="deptType"/>
        <result column="encryLevelCompany"  property="encryLevelCompany"/>
        <collection property="childs" column="deptId" select="getDeptIdByParentId"/>
    </resultMap>

    <select id="getDeptByUser" parameterType="java.lang.Long" resultMap="DeptUserResult">
        select
        mud.encry_level_dept encryLevelDept,
        md.dept_type deptType,
        md.id deptId,
        mu.encry_level_company encryLevelCompany
        from middle_user_department mud
        inner join manage_department md on md.id=mud.dept_id
        inner join manage_user mu on mu.id=mud.user_id
        where mud.user_id=#{id} and mud.lowest_level=1
    </select>

    <select id="getDeptIdByParentId" resultMap="DeptUserResult">
        select
        id deptId
        from manage_department
        where parent_id=#{deptId}
    </select>


  <resultMap id="BaseResultMap" type="com.hoolink.sdk.bo.manager.SimpleDeptUserBO">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_no" jdbcType="VARCHAR" property="userNo" />
    <result column="user_account" jdbcType="VARCHAR" property="userAccount" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="position" jdbcType="VARCHAR" property="position" />
    <result column="encry_level_company" jdbcType="INTEGER" property="encryLevelCompany" />
    <result column="view_encry_level_permitted" jdbcType="BIT" property="viewEncryLevelPermitted" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="device_code" jdbcType="VARCHAR" property="deviceCode" />
    <result column="receive_sms" jdbcType="BIT" property="receiveSms" />
  </resultMap>

  <select id="selectAllByDeptIds" resultMap="BaseResultMap">
  SELECT
        u.id,
        u.user_no,
        u.user_account,
        u.user_name,
        u.role_id,
        u.phone,
        u.position,
        u.encry_level_company,
        u.view_encry_level_permitted,
        u.device_code,
        u.receive_sms,
        m.dept_id AS dept_id
    FROM
        middle_user_department m
        LEFT JOIN manage_user u ON m.user_id = u.id
        WHERE u.enabled = TRUE
        AND m.lowest_level = 1
        <if test="idList != null and idList.size() > 0">
            AND
            m.dept_id in
            <foreach collection="idList" separator="," open="(" close=")" item="id">
                #{id}
            </foreach>
        </if>
  </select>

    <select id="selectUserAndDeptByUserName" resultMap="BaseResultMap">
        SELECT
            u.*,
            m.dept_id
        FROM
            manage_user u
            LEFT JOIN middle_user_department m ON u.id = m.user_id
        WHERE
            LOCATE(#{userName} ,user_name) > 0
            AND m.lowest_level = 1
            AND u.enabled = TRUE
    </select>
    <update id="updateDeviceCodeEmpty">
        update manage_user set device_code='' where device_code=#{deviceCode}
    </update>
</mapper>