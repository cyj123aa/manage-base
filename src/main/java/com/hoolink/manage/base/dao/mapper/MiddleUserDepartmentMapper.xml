<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoolink.manage.base.dao.mapper.MiddleUserDepartmentMapper">
  <resultMap id="BaseResultMap" type="com.hoolink.manage.base.dao.model.MiddleUserDepartment">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="dept_id" jdbcType="BIGINT" property="deptId" />
    <result column="encry_level_dept" jdbcType="INTEGER" property="encryLevelDept" />
    <result column="diff_dept_group" jdbcType="VARCHAR" property="diffDeptGroup" />
    <result column="lowest_level" jdbcType="BIT" property="lowestLevel" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
    @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
    @mbggenerated
    -->
    id, user_id, dept_id, encry_level_dept, diff_dept_group, lowest_level
  </sql>
  <select id="selectByExample" parameterType="com.hoolink.manage.base.dao.model.MiddleUserDepartmentExample" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from middle_user_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
    <include refid="Base_Column_List" />
    from middle_user_department
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
    @mbggenerated
    -->
    delete from middle_user_department
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hoolink.manage.base.dao.model.MiddleUserDepartmentExample">
    <!--
    @mbggenerated
    -->
    delete from middle_user_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="id" parameterType="com.hoolink.manage.base.dao.model.MiddleUserDepartment" useGeneratedKeys="true">
    <!--
    @mbggenerated
    -->
    insert into middle_user_department (user_id, dept_id, encry_level_dept, 
      diff_dept_group, lowest_level)
    values (#{userId,jdbcType=BIGINT}, #{deptId,jdbcType=BIGINT}, #{encryLevelDept,jdbcType=INTEGER}, 
      #{diffDeptGroup,jdbcType=VARCHAR}, #{lowestLevel,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" keyProperty="id" parameterType="com.hoolink.manage.base.dao.model.MiddleUserDepartment" useGeneratedKeys="true">
    <!--
    @mbggenerated
    -->
    insert into middle_user_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="encryLevelDept != null">
        encry_level_dept,
      </if>
      <if test="diffDeptGroup != null">
        diff_dept_group,
      </if>
      <if test="lowestLevel != null">
        lowest_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=BIGINT},
      </if>
      <if test="encryLevelDept != null">
        #{encryLevelDept,jdbcType=INTEGER},
      </if>
      <if test="diffDeptGroup != null">
        #{diffDeptGroup,jdbcType=VARCHAR},
      </if>
      <if test="lowestLevel != null">
        #{lowestLevel,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hoolink.manage.base.dao.model.MiddleUserDepartmentExample" resultType="java.lang.Integer">
    <!--
    @mbggenerated
    -->
    select count(*) from middle_user_department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
    @mbggenerated
    -->
    update middle_user_department
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.deptId != null">
        dept_id = #{record.deptId,jdbcType=BIGINT},
      </if>
      <if test="record.encryLevelDept != null">
        encry_level_dept = #{record.encryLevelDept,jdbcType=INTEGER},
      </if>
      <if test="record.diffDeptGroup != null">
        diff_dept_group = #{record.diffDeptGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.lowestLevel != null">
        lowest_level = #{record.lowestLevel,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
    @mbggenerated
    -->
    update middle_user_department
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      dept_id = #{record.deptId,jdbcType=BIGINT},
      encry_level_dept = #{record.encryLevelDept,jdbcType=INTEGER},
      diff_dept_group = #{record.diffDeptGroup,jdbcType=VARCHAR},
      lowest_level = #{record.lowestLevel,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hoolink.manage.base.dao.model.MiddleUserDepartment">
    <!--
    @mbggenerated
    -->
    update middle_user_department
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=BIGINT},
      </if>
      <if test="encryLevelDept != null">
        encry_level_dept = #{encryLevelDept,jdbcType=INTEGER},
      </if>
      <if test="diffDeptGroup != null">
        diff_dept_group = #{diffDeptGroup,jdbcType=VARCHAR},
      </if>
      <if test="lowestLevel != null">
        lowest_level = #{lowestLevel,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hoolink.manage.base.dao.model.MiddleUserDepartment">
    <!--
    @mbggenerated
    -->
    update middle_user_department
    set user_id = #{userId,jdbcType=BIGINT},
      dept_id = #{deptId,jdbcType=BIGINT},
      encry_level_dept = #{encryLevelDept,jdbcType=INTEGER},
      diff_dept_group = #{diffDeptGroup,jdbcType=VARCHAR},
      lowest_level = #{lowestLevel,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>