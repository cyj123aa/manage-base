<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hoolink.manage.base.dao.mapper.ext.ManageRoleMapperExt">
  <resultMap id="BaseResultMap" type="com.hoolink.manage.base.dao.model.ManageRole">
    <!--
    @mbggenerated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="role_level" jdbcType="TINYINT" property="roleLevel" />
    <result column="role_status" jdbcType="BIT" property="roleStatus" />
    <result column="creator" jdbcType="BIGINT" property="creator" />
    <result column="updator" jdbcType="BIGINT" property="updator" />
    <result column="created" jdbcType="BIGINT" property="created" />
    <result column="updated" jdbcType="BIGINT" property="updated" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
  </resultMap>

   <sql id="Base_Column_List">
    
    @mbggenerated
   
    id, role_name, role_desc, parent_id, role_level, role_status, creator, updator, created, 
    updated, enabled
  </sql>

  <select id="getUserRole" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
    @mbggenerated
    -->
    select 
        manage_role.id, role_name, role_desc, parent_id, role_level, role_status, manage_role.creator, manage_role.updator, manage_role.created, 
    manage_role.updated, manage_role.enabled
    from manage_role join manage_user on manage_role.id=manage_user.role_id
    where manage_user.id = #{userId} and manage_user.enabled=true and manage_role.enabled=true
  </select>

  <select id="getRoleByOne" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, role_name, role_desc, parent_id, role_level, role_status, creator, updator, created,
    updated, enabled from manage_role
    where enabled=true
    <if test="searchValue!=null and searchValue!=''">
    and locate(#{searchValue}, role_name)>0
    </if>
    order by created desc
  </select>

  <select id="getRoleByTwo" resultMap="BaseResultMap">
    select id, role_name, role_desc, parent_id, role_level, role_status, creator, updator, created,
    updated, enabled from manage_role
    where enabled=true
    and (parent_id=#{roleId} or id=#{roleId})
    <if test="searchValue!=null and searchValue!=''">
      and locate(#{searchValue}, role_name)>0
    </if>
    order by created desc
  </select>
</mapper>